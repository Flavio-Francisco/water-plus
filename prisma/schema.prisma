generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PostgreSQL")
}

model Level {
  id            Int      @id @default(autoincrement())
  level         Float?   @db.Real
  system_id     Int?
  hourly        String?
  pointName     String?
  LowLevel      Boolean? @default(false)
  CriticalLevel Boolean? @default(false)
  Supply        Boolean? @default(true)
  systems       systems? @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

model Reservoir_cleaning {
  id           Int      @id @default(autoincrement())
  lastCleaning String
  system_id    Int?
  systems      systems? @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model acid {
  id        Int      @default(autoincrement())
  date      String
  machine   String   @id
  system_id Int?
  systems   systems? @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

model apevisa {
  id               Int      @id @default(autoincrement())
  date             String
  name             String?
  cianoBacteria    String?
  escherichaColi   String?
  endotoxin        String?
  heterotrophic    String?
  totalColiforms   String?
  seedingInDepth   String?
  seedingOnSurface String?
  conductivity     String?
  freeChlorine     String?
  pH               String?
  potentiometry    String?
  system_id        Int?
  systems          systems? @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

model chemical {
  id              Int      @id(map: "chemist_pkey") @default(autoincrement())
  name            String?
  CRM             String?
  graduation      String?
  postGraduation  String?
  postGraduation2 String?
  system_id       Int?
  systems         systems? @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model control {
  id              Int      @id @default(autoincrement())
  or1             Boolean?
  or2             Boolean?
  start           Boolean?
  start1          Boolean?
  start2          Boolean?
  conductivityOr1 Boolean?
  conductivityOr2 Boolean?
  loopingPump1    Boolean?
  loopingPump2    Boolean?
  criticalLevel   Boolean?
  lowPressureOr1  Boolean?
  lowPressureOr2  Boolean?
  pumpOr1         Boolean?
  pumpOr2         Boolean?
  off             Boolean?
  state           Boolean?
  status          Boolean?
  system          Boolean?
  automatic       Boolean?
  id_system       Int?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model desifection {
  id        Int     @default(autoincrement())
  step1     String
  step2     String?
  data1     String?
  data2     String?
  data3     String?
  product   String?
  quantity  String?
  loop      String?
  system_id Int
  systems   systems @relation(fields: [system_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([id, system_id])
}

model diasefe {
  id        Int      @default(autoincrement())
  date      String
  machine   String   @id
  system_id Int?
  systems   systems? @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

model doctor {
  id              Int      @id @default(autoincrement())
  name            String?
  CRM             String?
  graduation      String?
  postGraduation  String?
  postGraduation2 String?
  system_id       Int?
  systems         systems? @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model events {
  id          Int      @id @default(autoincrement())
  title       String?
  date        String?
  description String?
  editable    Boolean?
  systen_id   Int?
  status      String?
  systems     systems? @relation(fields: [systen_id], references: [id], onDelete: Cascade)
}

model microbiologigo_assays {
  id                         Int      @id @default(autoincrement())
  samplingDate               String
  sampleMatrixAndOrigin      String?
  eColiPresence              String?
  totalColiformsPresence     String?
  heterotrophicBacteriaCount String?
  system_id                  Int?
  endotoxins                 String?
  systems                    systems? @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

model operator {
  id           Int      @id @default(autoincrement())
  name         String
  registration String?
  system_id    Int?
  systems      systems? @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

model parameters {
  id                            Int       @id @default(autoincrement())
  Color                         String
  Turbidity                     String?
  Taste                         String?
  Odor                          String?
  TotalChlorine                 Float?    @db.Real
  FreeChlorine                  Float?    @db.Real
  ph                            Float?    @db.Real
  SoftenerHardness              Float?    @db.Real
  MultimediaFilterInputPressure Float?    @db.Real
  SoftenerInputPressure         Float?    @db.Real
  CarbonInputPressure           Float?    @db.Real
  CarbonOutputPressure          Float?    @db.Real
  MultimediaFilterDisplayTime   String?
  SoftenerDisplayTime           String?
  CarbonDisplayTime             String?
  SaltReservoirLevel            String?
  ROInputPressure1              Float?    @db.Real
  ROInputPressure2              Float?    @db.Real
  MembraneInputPressure1        Float?    @db.Real
  MembraneInputPressure2        Float?    @db.Real
  RejectPressur1                Float?    @db.Real
  RejectPressur2                Float?    @db.Real
  ROInputConductivity1          Float?    @db.Real
  ROInputConductivity2          Float?    @db.Real
  ROOutputConductivity1         Float?    @db.Real
  ROOutputConductivity2         Float?    @db.Real
  SalinityRejectionRate1        Float?    @db.Real
  SalinityRejectionRate2        Float?    @db.Real
  PermeateFlowRate1             Float?    @db.Real
  PermeateFlowRate2             Float?    @db.Real
  RejectFlowRate1               Float?    @db.Real
  RejectFlowRate2               Float?    @db.Real
  OutputPressure                Float?    @db.Real
  ReturnPressure                Float?    @db.Real
  OzoneTestBefore1stShift       Boolean?
  Conductivity                  Float?    @db.Real
  system_id                     Int?
  date                          DateTime? @default(now()) @db.Date
  systems                       systems?  @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

model reservoir_analysis {
  id                         Int      @id @default(autoincrement())
  bicarbonateAlkalinity      String
  carbonateAlkalinity        String?
  hydroxideAlkalinity        String?
  totalAlkalinity            String?
  aluminum                   String?
  ammonia                    String?
  calcium                    String?
  chlorides                  String?
  freeResidualChlorine       String?
  electricalConductivity     String?
  apparentColor              String?
  carbonateHardness          String?
  nonCarbonateHardness       String?
  totalHardness              String?
  totalIron                  String?
  magnesium                  String?
  manganese                  String?
  nitrate                    String?
  nitrite                    String?
  dissolvedOxygen            String?
  pH                         String?
  potassium                  String?
  sodium                     String?
  totalDissolvedSolids       String?
  sulfate                    String?
  hydrogenSulfide            String?
  surfactants                String?
  totalColiforms             String?
  heterotrophicBacteriaCount String?
  endotoxins                 String?
  samplingDate               String?
  sampleMatrixAndOrigin      String?
  system_id                  Int?
  systems                    systems? @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

model reservoir_cleaning_report {
  id               Int      @id @default(autoincrement())
  flushing         String
  laboratory       String?
  loopDisinfection String?
  initialTime      String?
  finalTime        String?
  comments         String?
  system_id        Int?
  systems          systems? @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

model systems {
  id                        Int                         @id @default(autoincrement())
  name                      String
  address                   String?
  city                      String?
  state                     String?
  zipCode                   String?
  number                    Int?
  Level                     Level[]
  ParametersData            ParametersData[]
  Reservoir_cleaning        Reservoir_cleaning[]
  Token                     Token[]
  acid                      acid[]
  apevisa                   apevisa[]
  chemical                  chemical[]
  desifection               desifection[]
  diasefe                   diasefe[]
  doctor                    doctor[]
  events                    events[]
  microbiologigo_assays     microbiologigo_assays[]
  operator                  operator[]
  parameters                parameters[]
  reservoir_analysis        reservoir_analysis[]
  reservoir_cleaning_report reservoir_cleaning_report[]
  user                      user[]
  whatsApp                  whatsApp[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  password  String?
  system_id Int?
  adm       Boolean?
  systems   systems? @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

model Token {
  id        Int      @default(autoincrement())
  token     String   @id
  system_id Int?
  systems   systems? @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

model ParametersData {
  id                    Int      @id @default(autoincrement())
  inletConductivityOr1  Float?
  inletConductivityOr2  Float?
  outletConductivityOr1 Float?
  outletConductivityOr2 Float?
  inletPressureOr1      Float?
  inletPressureOr2      Float?
  outletPressureOr1     Float?
  outletPressureOr2     Float?
  system_id             Int?
  systems               systems? @relation(fields: [system_id], references: [id], onDelete: Cascade)
}

model whatsApp {
  id                  Int      @id @default(autoincrement())
  name                String?
  number              String?
  lowLevel            Boolean?
  criticaLevel        Boolean?
  Fueling             Boolean?
  SendLowLevel        Boolean?
  SendCriticaLevel    Boolean?
  SendFueling         Boolean?
  system_id           Int
  messageLowLevel     String?
  messageCriticaLevel String?
  messageFueling      String?
  systems             systems  @relation(fields: [system_id], references: [id], onDelete: Cascade)
}
